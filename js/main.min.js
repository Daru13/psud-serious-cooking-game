!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(require("interactjs")):"function"==typeof define&&define.amd?define(["interactjs"],t):t((e=e||self).interact)}(this,(function(e){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e;class t{constructor(e=[],t=0){this.counters=new Map,this.init(e,t)}init(e,t){for(let n of e)this.set(n,t)}has(e){return this.counters.has(e)}zero(e){this.counters.set(e,0)}set(e,t,n=!1){if(this.counters.has(e)||this.zero(e),n){const n=this.counters.get(e);this.counters.set(e,n+t)}else this.counters.set(e,t)}increment(e,t=1){this.set(e,t,!0)}decrement(e,t=1){this.set(e,-t,!0)}getCountOf(e){return this.counters.has(e)?this.counters.get(e):0}getAllCounts(){return[...this.counters.entries()].map(([e,t])=>({key:e,count:t}))}}var n,i,r;!function(e){e.Plate="PLATE",e.Bowl="BOWL"}(n||(n={})),function(e){e.Positive="POSITIVE",e.Neutral="NEUTRAL",e.Negative="NEGATIVE"}(i||(i={}));class s{constructor(e,t,n,r,s,a,o,d,c){this.name=e,this.category=t,this.level=n,this.container=r,this.requiredIngredientNames=s,this.requiredIngredientAlternatives=a,this.optionalIngredientNames=o,this.wrongIngredientNames=d,this.ingredientEffects=c,this.positiveIngredientEffects=c.filter(e=>e.type===i.Positive),this.negativeIngredientEffects=c.filter(e=>e.type===i.Negative),this.neutralIngredientEffects=c.filter(e=>e.type===i.Neutral)}canContain(e,t){if(this.requiredIngredientNames.has(e)||this.optionalIngredientNames.has(e))return!0;for(let t of this.requiredIngredientAlternatives)if(t.has(e))return!0;return!1}static fromSerialisedRecipe(e){const t=e.requiredIngredientNames.filter(e=>!Array.isArray(e)),n=e.requiredIngredientNames.filter(e=>Array.isArray(e)).map(e=>new Set(e));return new s(e.name,e.category,e.level,e.container,new Set(t),new Set(n),new Set(e.optionalIngredientNames),new Set(e.wrongIngredientNames),e.ingredientEffects)}}!function(e){e[e.NotAvailable=0]="NotAvailable",e[e.Standard=1]="Standard",e[e.Better=2]="Better",e[e.Perfect=3]="Perfect"}(r||(r={}));class a{constructor(e,n){this.targetRecipe=e,this.availableIngredientsCounts=new t(n,1),this.mixedIngredientNames=new t,this.rejectedIngredientsCounts=new t}getAllAvailableIngredients(){return this.availableIngredientsCounts.getAllCounts().filter(e=>e.count>0).map(e=>e.key)}getAllMixedIngredients(){return this.mixedIngredientNames.getAllCounts().filter(e=>e.count>0).map(e=>e.key)}getNbMixedIngredients(){return this.getAllMixedIngredients().length}contains(e){return this.mixedIngredientNames.getCountOf(e)>0}add(e){return this.targetRecipe.canContain(e,this.getAllMixedIngredients())?(this.mixedIngredientNames.increment(e),!0):(this.rejectedIngredientsCounts.increment(e),!1)}use(e){if(0===this.availableIngredientsCounts.getCountOf(e))return!1;const t=this.add(e);return t&&this.availableIngredientsCounts.decrement(e),t}takeBack(e){return 0!==this.mixedIngredientNames.getCountOf(e)&&(this.mixedIngredientNames.decrement(e),this.availableIngredientsCounts.increment(e),!0)}isFinished(){const e=this.targetRecipe.requiredIngredientNames.values();for(let t of e)if(!this.contains(t))return!1;const t=this.targetRecipe.requiredIngredientAlternatives.values();e:for(let e of t){for(let t of e)if(this.contains(t))continue e;return!1}return!0}triggersEffect(e){const t=this.mixedIngredientNames.getAllCounts().filter(e=>e.count>0).map(e=>e.key);for(let n of e.ingredientNames)if(!t.includes(n))return!1;return!0}getTriggeredEffects(){return this.targetRecipe.ingredientEffects.filter(e=>this.triggersEffect(e))}computeQuality(){if(!this.isFinished())return r.NotAvailable;const e=this.targetRecipe;if(0===e.positiveIngredientEffects.length)return r.Standard;const t=this.getTriggeredEffects();let n=0,s=0;for(let e of t)switch(e.type){case i.Positive:n+=1;break;case i.Negative:s+=1}return n===e.positiveIngredientEffects.length&&0===s?r.Perfect:n>0&&0===s?r.Better:r.Standard}computeReward(){switch(this.computeQuality()){case r.Standard:return 50;case r.Better:return 100;case r.Perfect:return 200;case r.NotAvailable:default:return 0}}}class o{constructor(e,t=!0){this.gameData=e,this.nbCoins=0,this.recipeDetails=new Map,t&&this.unlockDefaultRecipes()}getNbCoins(){return this.nbCoins}getRecipeCategoriesWithTrophies(){return[...this.gameData.getRecipesGroupedByCategory().entries()].filter(([e,t])=>t.every(e=>this.getRecipeDetails(e.name).hasStarBadge)).map(([e,t])=>e)}getNbTrophies(){return this.getRecipeCategoriesWithTrophies().length}getRecipeDetails(e){return this.recipeDetails.has(e)||this.recipeDetails.set(e,{recipeName:e,isUnlocked:!1,hasStarBadge:!1,nbPreparations:0,preparationQualityCounts:new t}),this.recipeDetails.get(e)}isUnlocked(e){return this.getRecipeDetails(e).isUnlocked}getUnlockedRecipeNames(){return[...this.recipeDetails.values()].filter(e=>e.isUnlocked).map(e=>e.recipeName)}hasStarBadge(e){return this.getRecipeDetails(e).hasStarBadge}getStaredRecipeNames(){return[...this.recipeDetails.values()].filter(e=>e.hasStarBadge).map(e=>e.recipeName)}logPreparation(e){const t=this.getRecipeDetails(e.targetRecipe.name),n=e.computeReward();this.nbCoins+=n;const i=e.computeQuality();t.nbPreparations+=1,t.preparationQualityCounts.increment(i),i===r.Perfect&&(t.hasStarBadge=!0),this.saveInLocalStorage()}unlockRecipe(e){this.getRecipeDetails(e).isUnlocked=!0,this.saveInLocalStorage()}unlockDefaultRecipes(){for(let e of this.gameData.initiallyAvailableRecipeNames)this.unlockRecipe(e)}saveInLocalStorage(){const e={nbCoins:this.nbCoins,recipeDetails:[]};for(let t of this.recipeDetails.values())e.recipeDetails.push({recipeName:t.recipeName,isUnlocked:t.isUnlocked,hasStarBadge:t.hasStarBadge,nbPreparations:t.nbPreparations,preparationQualityCounts:t.preparationQualityCounts.getAllCounts()});localStorage.setItem(o.LOCAL_STORAGE_KEY,JSON.stringify(e))}static loadFromLocalStorageOrCreate(e){const t=localStorage.getItem(o.LOCAL_STORAGE_KEY);if(null===t)return new o(e,!0);const n=new o(e,!1),i=JSON.parse(t);n.nbCoins=i.nbCoins;for(let e of i.recipeDetails){const t=n.getRecipeDetails(e.recipeName);t.isUnlocked=e.isUnlocked,t.hasStarBadge=e.hasStarBadge,t.nbPreparations=e.nbPreparations;for(let{key:n,count:i}of e.preparationQualityCounts)t.preparationQualityCounts.set(n,i)}return n}}o.LOCAL_STORAGE_KEY="playerProgress";class d{constructor(e){this.game=e,this.root=null,this.mounted=!1}createRootElement(){this.root=document.createElement("div"),this.root.setAttribute("id",this.id),this.root.classList.add("scene")}mount(e){this.mounted||(e.append(this.root),this.mounted=!0)}beforeMount(){}afterMount(){}unmount(){this.mounted&&(this.root.parentElement.removeChild(this.root),this.mounted=!1)}beforeUnmount(){}afterUnmount(){}}class c{static emit(e){let t=e.id;if(!c.eventHandlers.has(t))return;let n=c.eventHandlers.get(t);for(let t of n)t(e)}static registerHandler(e,t){c.eventHandlers.has(e.id)||c.eventHandlers.set(e.id,[]),c.eventHandlers.get(e.id).push(t)}static unregisterHandler(e,t){let n=c.eventHandlers.get(e.id),i=n.indexOf(t);i>=0&&n.splice(i,1),0===n.length&&c.eventHandlers.delete(e.id)}}c.eventHandlers=new Map;class l{constructor(e){this.id="startCooking",this.recipe=e}}l.id="startCooking";class u{constructor(){this.id="displayRecipeList"}}u.id="displayRecipeList";class h extends d{constructor(e){super(e),this.id=h.id,this.coinCounterNode=null,this.trophyCounterNode=null,this.createRootElement()}createRootElement(){super.createRootElement(),this.createMainTitle(),this.createMainMenu(),this.createStatsBar()}createMainTitle(){const e=document.createElement("h1");e.textContent="Healthy Chef",e.classList.add("main-title"),this.root.append(e)}createMainMenu(){const e=document.createElement("div");e.classList.add("main-menu"),this.root.append(e);const t=document.createElement("button");t.textContent="Play",t.classList.add("play-button"),t.addEventListener("click",()=>{const e=this.game.getRandomUnlockedRecipe();c.emit(new l(e))}),e.append(t);const n=document.createElement("button");n.textContent="Recipes",n.classList.add("recipes-button"),n.addEventListener("click",()=>{c.emit(new u)}),e.append(n)}createStatsBar(){const e=document.createElement("div");e.classList.add("stats-bar"),this.root.append(e);const t=document.createElement("div");t.classList.add("coin-counter"),e.append(t);const n=document.createElement("div");n.classList.add("trophy-counter"),e.append(n),this.coinCounterNode=t,this.trophyCounterNode=n}updateCounters(){const e=this.game.progress;this.coinCounterNode.innerText=e.getNbCoins().toFixed(0),this.trophyCounterNode.innerText=e.getNbTrophies().toFixed(0)}beforeMount(){this.updateCounters()}}function p(e){for(;null!==e.firstChild;)e.removeChild(e.lastChild)}h.id="title-screen";class g{constructor(){this.id="finishCooking"}}g.id="finishCooking";class m{constructor(){this.id="displayTitleScreen"}}m.id="displayTitleScreen";class f extends d{constructor(e){super(e),this.id=f.id,this.elapsedSeconds=0,this.timerInterval=-1,this.draggedIngredientName=null,this.timerNode=null,this.doneButtonNode=null,this.recipeTitleNode=null,this.cookingSpaceNode=null,this.preparationPictureNode=null,this.ingredientListNode=null,this.draggedIngredientNode=null,this.createRootElement()}createRootElement(){super.createRootElement(),this.createTitleBar(),this.createCookingSpace(),this.createIngredientList()}createTitleBar(){const e=document.createElement("div");e.classList.add("title-bar"),this.root.append(e);const t=document.createElement("button");t.type="button",t.textContent="Title screen",t.classList.add("title-screen-button"),t.addEventListener("click",()=>{c.emit(new m)}),e.append(t);const n=document.createElement("h2");n.classList.add("recipe-title"),e.append(n);const i=document.createElement("div");i.textContent="0:00",i.classList.add("timer"),e.append(i);const r=document.createElement("button");r.type="button",r.textContent="Done",r.classList.add("done-button"),r.addEventListener("click",()=>{c.emit(new g)}),e.append(r),this.timerNode=i,this.doneButtonNode=r,this.recipeTitleNode=n}createCookingSpace(){const t=document.createElement("div");t.classList.add("cooking-space"),this.root.append(t);const n=document.createElement("div");n.classList.add("ingredient-drop-zone"),t.append(n),e(n).dropzone({accept:".ingredient",ondragenter:()=>{this.game.currentPreparation.contains(this.draggedIngredientName)||n.classList.add("drop-enabled")},ondragleave:()=>{n.classList.remove("drop-enabled")},ondrop:()=>{const e=this.draggedIngredientName;if(this.draggedIngredientName=null,n.classList.remove("drop-enabled"),!this.game.currentPreparation.use(e)){const e=300;this.cookingSpaceNode.classList.add("error-flash"),window.setTimeout(()=>{this.cookingSpaceNode.classList.remove("error-flash")},e)}this.updateIngredient(e),this.updateMixedIngredientsCount(),this.updateDoneButton()}});const i=document.createElement("div");i.classList.add("preparation-picture"),n.append(i),this.cookingSpaceNode=t,this.preparationPictureNode=i}createIngredientList(){const e=document.createElement("div");e.classList.add("ingredient-list-container"),this.root.append(e);const t=(e=!1)=>{const t=this.ingredientListNode.querySelector(".ingredient").getBoundingClientRect().width;this.ingredientListNode.scrollBy({left:(e?-1:1)*t,top:0,behavior:"smooth"})},n=document.createElement("button");n.classList.add("left-scroll-button"),n.addEventListener("click",()=>{t(!0)}),e.append(n);const i=document.createElement("div");i.classList.add("ingredient-list"),e.append(i);const r=document.createElement("button");r.classList.add("right-scroll-button"),r.addEventListener("click",()=>{t(!1)}),e.append(r),this.ingredientListNode=i}updateTimer(){const e=Math.floor(this.elapsedSeconds/60),t=this.elapsedSeconds%60,n=`${e.toFixed(0)}:${(t<10?"0":"")+t.toFixed(0)}`;this.timerNode.innerText=n}updateRecipeContainerPicture(){const e=this.game.currentPreparation.targetRecipe.container;this.preparationPictureNode.setAttribute("data-container",e)}updateMixedIngredientsCount(){const e=document.createElement("span");e.innerText=this.game.currentPreparation.getNbMixedIngredients().toFixed(0),p(this.preparationPictureNode),this.preparationPictureNode.append(e)}updateIngredientList(){const t=this.game.currentPreparation.getAllAvailableIngredients();p(this.ingredientListNode);for(let n of t){const t=document.createElement("div");t.innerText=n,t.classList.add("ingredient"),t.setAttribute("data-ingredient",n),e(t).draggable({listeners:{start:e=>{const t=this.game.currentPreparation.contains(n);this.draggedIngredientName=n;const i=document.createElement("div");i.classList.add("dragged-ingredient"),i.classList.toggle("already-used",t),i.setAttribute("data-ingredient",n),document.body.append(i),this.draggedIngredientNode=i,this.updateDraggedIngredient(e)},move:e=>{this.updateDraggedIngredient(e)},end:()=>{document.body.removeChild(this.draggedIngredientNode),this.draggedIngredientNode=null}},cursorChecker:(e,t,i,r)=>this.game.currentPreparation.contains(n)?"pointer":r?"grabbing":"grab"}).on("click",()=>{this.game.currentPreparation.contains(n)&&(this.game.currentPreparation.takeBack(n),this.updateIngredient(n),this.updateMixedIngredientsCount(),this.updateDoneButton())}),this.ingredientListNode.append(t)}}updateIngredient(e){const t=this.ingredientListNode.querySelector(`*[data-ingredient="${e}"]`),n=this.game.currentPreparation.contains(e);t.classList.toggle("already-used",n)}updateDraggedIngredient(e){const t=this.draggedIngredientNode,n=t.getBoundingClientRect();t.style.top=`${Math.round(e.clientY-n.height/2)}px`,t.style.left=`${Math.round(e.clientX-n.width/2)}px`}updateDoneButton(){this.doneButtonNode.disabled=!this.game.currentPreparation.isFinished()}beforeMount(){const e=this.game.currentPreparation.targetRecipe.name;this.recipeTitleNode.innerText=e,this.updateDoneButton(),this.updateRecipeContainerPicture(),this.updateMixedIngredientsCount(),this.updateIngredientList()}afterMount(){this.elapsedSeconds=0,this.timerInterval=window.setInterval(()=>{this.elapsedSeconds+=1,this.updateTimer()},1e3)}beforeUnmount(){window.clearInterval(this.timerInterval)}}f.id="recipe-cooking";class N extends d{constructor(e){super(e),this.id=N.id,this.preparation=null,this.recipeTitleNode=null,this.dishPictureNode=null,this.rewardNode=null,this.commentListNode=null,this.createRootElement()}createRootElement(){super.createRootElement(),this.createTitleBar(),this.createDishPicture(),this.createCommentSection(),this.createActionBar()}createTitleBar(){const e=document.createElement("div");e.classList.add("title-bar"),this.root.append(e);const t=document.createElement("h2");t.classList.add("recipe-title"),e.append(t),this.recipeTitleNode=t}createDishPicture(){const e=document.createElement("div");e.classList.add("dish-picture"),this.root.append(e),this.dishPictureNode=e}createCommentSection(){const e=document.createElement("div");e.classList.add("comment-section"),this.root.append(e);const t=document.createElement("div");t.classList.add("reward"),e.append(t);const n=document.createElement("ul");n.classList.add("comment-list"),e.append(n),this.rewardNode=t,this.commentListNode=n}createActionBar(){const e=document.createElement("div");e.classList.add("action-bar"),this.root.append(e);const t=document.createElement("button");t.textContent="Title screen",t.classList.add("title-screen-button"),t.addEventListener("click",()=>{c.emit(new m)}),e.append(t);const n=document.createElement("button");n.textContent="Play again",n.classList.add("play-again-button"),n.addEventListener("click",()=>{const e=this.game.currentPreparation.targetRecipe;c.emit(new l(e))}),e.append(n);const i=document.createElement("button");i.textContent="Next recipe",i.classList.add("next-recipe-button"),i.addEventListener("click",()=>{const e=this.game.getRandomUnlockedRecipe();c.emit(new l(e))}),e.append(i)}updateReward(){const e=this.game.currentPreparation.computeReward();this.rewardNode.innerText=e.toString()}updateComments(){const e=this.game.currentPreparation.getTriggeredEffects();p(this.commentListNode);for(let t of e){if(void 0===t.reason)continue;const e=t.type===i.Positive?"positive":t.type===i.Negative?"negative":"neutral",n=document.createElement("li");n.classList.add("comment",e),n.innerText=t.reason,this.commentListNode.append(n)}}beforeMount(){const e=this.game.currentPreparation.targetRecipe.name;this.recipeTitleNode.innerText=e,this.dishPictureNode.setAttribute("data-recipe",this.game.currentPreparation.targetRecipe.name),this.updateReward(),this.updateComments()}}N.id="recipe-evaluation";class y extends d{constructor(e){super(e),this.id=y.id,this.recipeCategoryTitleNodes=new Map,this.recipeItemNodes=new Map,this.createRootElement()}createRootElement(){super.createRootElement(),this.createTitleBar(),this.createRecipeList()}createTitleBar(){const e=document.createElement("div");e.classList.add("title-bar"),this.root.append(e);const t=document.createElement("button");t.textContent="Title screen",t.classList.add("title-screen-button"),t.addEventListener("click",()=>{c.emit(new m)}),e.append(t);const n=document.createElement("h2");n.textContent="Recipes",n.classList.add("title"),e.append(n)}createRecipeList(){const e=document.createElement("ul");e.classList.add("recipe-list"),this.root.append(e);const t=this.game.data.getRecipesGroupedByCategory();for(let[n,i]of t.entries())this.createRecipeCategory(e,n,i)}createRecipeCategory(e,t,n){const i=document.createElement("div");i.classList.add("recipe-category"),e.append(i);const r=document.createElement("h3");r.classList.add("category-title"),r.innerText=t,i.append(r);const s=document.createElement("ul");s.classList.add("recipe-item-list"),i.append(s);for(let e of n)this.createRecipeItem(s,e);this.recipeCategoryTitleNodes.set(t,r)}createRecipeItem(e,t){const n=document.createElement("li");n.classList.add("recipe-item"),e.append(n);const i=document.createElement("button");i.innerText=t.name,i.addEventListener("click",()=>{c.emit(new l(t))}),n.append(i),this.recipeItemNodes.set(t.name,n)}updateCategoryTitles(){for(let e of this.recipeCategoryTitleNodes.values())e.classList.remove("has-trophy");const e=this.game.progress.getRecipeCategoriesWithTrophies();for(let t of e){this.recipeCategoryTitleNodes.get(t).classList.add("has-trophy")}}updateRecipeItems(){for(let[e,t]of this.recipeItemNodes.entries()){const n=this.game.progress.hasStarBadge(e);t.classList.toggle("has-star-badge",n);const i=this.game.progress.isUnlocked(e);t.querySelector("button").disabled=!i}}beforeMount(){this.updateCategoryTitles(),this.updateRecipeItems()}}y.id="recipe-list";class E{constructor(e){this.container=document.getElementById(E.CONTAINER_ID),this.game=e,this.scenes=new Map,this.currentScene=null,this.init()}init(){this.initScenes(),this.displayScene("title-screen")}initScenes(){const e=[new h(this.game),new y(this.game),new f(this.game),new N(this.game)];for(let t of e)this.scenes.set(t.id,t)}displayScene(e){if(!this.scenes.has(e))return;null!==this.currentScene&&(this.currentScene.beforeUnmount(),this.currentScene.unmount(),this.currentScene.afterUnmount());const t=this.scenes.get(e);t.beforeMount(),t.mount(this.container),t.afterMount(),this.currentScene=t}}E.CONTAINER_ID="game-container";var I=[{name:"Greek Yogurt"},{name:"Dried Fruit"},{name:"Fresh Berries"},{name:"Honey"},{name:"Granola"},{name:"Chicken"},{name:"Whole-grain Bread"},{name:"White Bread"},{name:"Avocado"},{name:"Salt"},{name:"Bacon"},{name:"Egg"},{name:"Chocolate"},{name:"Spinach"},{name:"Iceberg Lettuce"},{name:"Balsamic Vinegar"},{name:"Caesar Dressing"},{name:"Broccoli"},{name:"Bell Peppers"}],v=[{name:"Yogurt Bowl",category:"Healthy Snacks",level:1,container:"BOWL",requiredIngredientNames:["Greek Yogurt"],optionalIngredientNames:["Dried Fruit","Fresh Berries","Honey","Granola"],wrongIngredientNames:["Chicken","White Bread","Caesar Dressing"],ingredientEffects:[{ingredientNames:["Granola","Honey"],type:"NEGATIVE",reason:"Granola or Honey are good yogurt additions on their own, but Granola has sweeteners already added, so having both is a bit too much sugar!"},{ingredientNames:["Dried Fruit"],type:"NEGATIVE",reason:"Dried Fruit is very calorie dense and sugary, stick to the fresh fruit!"},{ingredientNames:["Fresh Berries"],type:"POSITIVE",reason:"Fresh Berries are a great choice! Antioxidants and nutrients, yum!"},{ingredientNames:["Honey"],type:"NEUTRAL",reason:"Honey is a great natural sweetener, but don't add too much!"}]},{name:"Avocado Toast",category:"Healthy Snacks",level:1,container:"PLATE",requiredIngredientNames:[["Whole-grain Bread","White Bread"],"Avocado"],optionalIngredientNames:["Salt","Bacon","Egg","Chocolate","White Bread","Whole-grain Bread"],wrongIngredientNames:["Greek Yogurt"],ingredientEffects:[{ingredientNames:["Whole-grain Bread"],type:"POSITIVE",reason:"Whole-grain is an awesome choice of Bread!"},{ingredientNames:["White Bread"],type:"NEGATIVE",reason:"White Bread is low in nutrients, go with whole-grain instead!"},{ingredientNames:["Bacon"],type:"NEGATIVE",reason:"Bacon is fatty, an egg would be a better source of protein for this snack"},{ingredientNames:["Chocolate"],type:"NEGATIVE",reason:"Using Chocolate here is just added sugar! (and a bit weird)"},{ingredientNames:["Salt"],type:"NEUTRAL",reason:"A pinch of Salt can make this snack tasty, just don't add too much!"}]},{name:"Small Salad",category:"Healthy Snacks",level:1,container:"BOWL",requiredIngredientNames:[["Spinach","Iceberg Lettuce"],["Balsamic Vinegar","Caesar Dressing"]],optionalIngredientNames:["Balsamic Vinegar","Caesar Dressing","Broccoli","Bell Peppers","Spinach","Iceberg Lettuce","Bacon"],wrongIngredientNames:["Chocolate"],ingredientEffects:[{ingredientNames:["Spinach"],type:"POSITIVE",reason:"Spinach is great in salads! Rich in vitamins and tasty!"},{ingredientNames:["Broccoli"],type:"POSITIVE",reason:"Broccoli is an amazing choice, lots of fiber and minerals!"},{ingredientNames:["Bell Peppers"],type:"POSITIVE",reason:"Vitamin C and antioxidants make Bell Peppers a tasty and healthy salad topping!"},{ingredientNames:["Caesar Dressing"],type:"NEGATIVE",reason:"Caesar Dressing is fatty! Simple Balsamic Vinegar is a tasty and healthy salad dressing."},{ingredientNames:["Bacon"],type:"NEGATIVE",reason:"Bacon is fatty! Avoid adding to your healthy snack."},{ingredientNames:["Iceberg Lettuce"],type:"NEUTRAL",reason:"Iceberg Lettuce isn't bad, but it's mostly water. Be sure to add some dark-green veggies like Spinach, which is packed with nutrients!"}]}],C=["Yogurt Bowl","Avocado Toast","Small Salad"];class L{constructor(e){this.name=e}static fromSerialisedIngredient(e){return new L(e.name)}}class b{constructor(){this.ingredients=Array.from(I).map(L.fromSerialisedIngredient),this.recipes=Array.from(v).map(s.fromSerialisedRecipe),this.initiallyAvailableRecipeNames=C}getRecipesGroupedByCategory(){const e=new Map;for(let t of this.recipes){e.has(t.category)||e.set(t.category,[]),e.get(t.category).push(t)}return e}}class S{constructor(){this.data=new b,this.progress=o.loadFromLocalStorageOrCreate(this.data),this.currentPreparation=null,this.renderer=new E(this),this.registerAllEventHandlers()}getRandomUnlockedRecipe(){const e=[...this.progress.getUnlockedRecipeNames().values()],t=e[Math.floor(Math.random()*e.length)];return this.data.recipes.find(e=>e.name===t)}registerAllEventHandlers(){c.registerHandler(m,()=>{this.renderer.displayScene(h.id)}),c.registerHandler(u,()=>{this.renderer.displayScene(y.id)}),c.registerHandler(l,e=>{const t=new Set;e.recipe.requiredIngredientNames.forEach(e=>{t.add(e)}),e.recipe.optionalIngredientNames.forEach(e=>{t.add(e)}),e.recipe.requiredIngredientAlternatives.forEach(e=>{e.forEach(e=>{t.add(e)})}),e.recipe.wrongIngredientNames.forEach(e=>{t.add(e)}),this.currentPreparation=new a(e.recipe,[...t.values()]),this.renderer.displayScene(f.id)}),c.registerHandler(g,()=>{this.progress.logPreparation(this.currentPreparation),this.renderer.displayScene(N.id)})}}window.addEventListener("DOMContentLoaded",()=>{const e=new S;console.log(e)})}));
